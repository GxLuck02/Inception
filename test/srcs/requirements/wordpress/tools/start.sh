#!/bin/bash

export MYSQL_DATABASE MYSQL_USER MYSQL_PASSWORD MYSQL_ROOT_PASSWORD
export db_name db_user db_pwd
export DOMAIN_NAME WP_TITLE WP_ADMIN_USR WP_ADMIN_PWD WP_ADMIN_EMAIL WP_USR WP_PWD WP_EMAIL

set -e

cd /var/www/html

# Installer WP-CLI si non pr√©sent
if [ ! -f /usr/local/bin/wp ]; then
    echo "üì¶ Installation de WP-CLI..."
    curl -sO https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
    chmod +x wp-cli.phar
    mv wp-cli.phar /usr/local/bin/wp
fi

# Si WordPress n‚Äôest pas encore install√©
if [ ! -f /var/www/html/wp-config.php ]; then
    echo "üì• T√©l√©chargement de WordPress..."
    rm -rf ./*
    wp core download --allow-root

    echo "‚è≥ Attente que MariaDB soit pr√™t..."
    until mysqladmin ping -h mariadb -u"$db_user" -p"$db_pwd" --silent; do
    sleep 2
    done
    echo "‚öôÔ∏è Configuration de WordPress..."
    wp config create \
        --dbname="$db_name" \
        --dbuser="$db_user" \
        --dbpass="$db_pwd" \
        --dbhost="mariadb" \
        --allow-root

    echo "üß± Installation de WordPress..."
    wp core install \
        --url="$DOMAIN_NAME" \
        --title="$WP_TITLE" \
        --admin_user="$WP_ADMIN_USR" \
        --admin_password="$WP_ADMIN_PWD" \
        --admin_email="$WP_ADMIN_EMAIL" \
        --skip-email \
        --allow-root

    echo "üë• Cr√©ation d‚Äôun utilisateur suppl√©mentaire..."
    wp user create "$WP_USR" "$WP_EMAIL" \
        --role=author \
        --user_pass="$WP_PWD" \
        --allow-root

    echo "üé® Activation du th√®me Astra..."
    wp theme install astra --activate --allow-root

    echo "üîå Activation du plugin Redis..."
    wp plugin install redis-cache --activate --allow-root

    echo "‚¨ÜÔ∏è Mise √† jour des plugins..."
    wp plugin update --all --allow-root
fi

echo "üöÄ Lancement d‚ÄôApache..."
exec apachectl -D FOREGROUND
